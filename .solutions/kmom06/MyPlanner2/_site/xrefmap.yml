### YamlMime:XRefMap
sorted: true
references:
- uid: MyPlanner.Tests
  name: MyPlanner.Tests
  href: api/MyPlanner.Tests.html
  commentId: N:MyPlanner.Tests
  fullName: MyPlanner.Tests
  nameWithType: MyPlanner.Tests
- uid: MyPlanner.Tests.MyTaskHandlerTest
  name: MyTaskHandlerTest
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html
  commentId: T:MyPlanner.Tests.MyTaskHandlerTest
  fullName: MyPlanner.Tests.MyTaskHandlerTest
  nameWithType: MyTaskHandlerTest
- uid: MyPlanner.Tests.MyTaskHandlerTest.Setup
  name: Setup()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_Setup
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.Setup
  fullName: MyPlanner.Tests.MyTaskHandlerTest.Setup()
  nameWithType: MyTaskHandlerTest.Setup()
- uid: MyPlanner.Tests.MyTaskHandlerTest.Setup*
  name: Setup
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_Setup_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.Setup
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.Setup
  nameWithType: MyTaskHandlerTest.Setup
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTask
  name: TestCompleteTask()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestCompleteTask
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTask
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTask()
  nameWithType: MyTaskHandlerTest.TestCompleteTask()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTask*
  name: TestCompleteTask
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestCompleteTask_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTask
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTask
  nameWithType: MyTaskHandlerTest.TestCompleteTask
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTaskNegative
  name: TestCompleteTaskNegative()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestCompleteTaskNegative
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTaskNegative
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTaskNegative()
  nameWithType: MyTaskHandlerTest.TestCompleteTaskNegative()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTaskNegative*
  name: TestCompleteTaskNegative
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestCompleteTaskNegative_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTaskNegative
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestCompleteTaskNegative
  nameWithType: MyTaskHandlerTest.TestCompleteTaskNegative
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestCreatePrivateTask
  name: TestCreatePrivateTask()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestCreatePrivateTask
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestCreatePrivateTask
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestCreatePrivateTask()
  nameWithType: MyTaskHandlerTest.TestCreatePrivateTask()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestCreatePrivateTask*
  name: TestCreatePrivateTask
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestCreatePrivateTask_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestCreatePrivateTask
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestCreatePrivateTask
  nameWithType: MyTaskHandlerTest.TestCreatePrivateTask
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestCreateTaskHandler
  name: TestCreateTaskHandler()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestCreateTaskHandler
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestCreateTaskHandler
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestCreateTaskHandler()
  nameWithType: MyTaskHandlerTest.TestCreateTaskHandler()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestCreateTaskHandler*
  name: TestCreateTaskHandler
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestCreateTaskHandler_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestCreateTaskHandler
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestCreateTaskHandler
  nameWithType: MyTaskHandlerTest.TestCreateTaskHandler
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestCreateWorkTask
  name: TestCreateWorkTask()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestCreateWorkTask
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestCreateWorkTask
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestCreateWorkTask()
  nameWithType: MyTaskHandlerTest.TestCreateWorkTask()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestCreateWorkTask*
  name: TestCreateWorkTask
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestCreateWorkTask_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestCreateWorkTask
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestCreateWorkTask
  nameWithType: MyTaskHandlerTest.TestCreateWorkTask
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTask
  name: TestDeleteTask()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestDeleteTask
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTask
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTask()
  nameWithType: MyTaskHandlerTest.TestDeleteTask()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTask*
  name: TestDeleteTask
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestDeleteTask_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTask
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTask
  nameWithType: MyTaskHandlerTest.TestDeleteTask
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTaskNegative
  name: TestDeleteTaskNegative()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestDeleteTaskNegative
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTaskNegative
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTaskNegative()
  nameWithType: MyTaskHandlerTest.TestDeleteTaskNegative()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTaskNegative*
  name: TestDeleteTaskNegative
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestDeleteTaskNegative_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTaskNegative
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestDeleteTaskNegative
  nameWithType: MyTaskHandlerTest.TestDeleteTaskNegative
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionPrivateTaskNegative
  name: TestDescriptionPrivateTaskNegative()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestDescriptionPrivateTaskNegative
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionPrivateTaskNegative
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionPrivateTaskNegative()
  nameWithType: MyTaskHandlerTest.TestDescriptionPrivateTaskNegative()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionPrivateTaskNegative*
  name: TestDescriptionPrivateTaskNegative
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestDescriptionPrivateTaskNegative_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionPrivateTaskNegative
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionPrivateTaskNegative
  nameWithType: MyTaskHandlerTest.TestDescriptionPrivateTaskNegative
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionWorkTaskNegative
  name: TestDescriptionWorkTaskNegative()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestDescriptionWorkTaskNegative
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionWorkTaskNegative
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionWorkTaskNegative()
  nameWithType: MyTaskHandlerTest.TestDescriptionWorkTaskNegative()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionWorkTaskNegative*
  name: TestDescriptionWorkTaskNegative
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestDescriptionWorkTaskNegative_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionWorkTaskNegative
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestDescriptionWorkTaskNegative
  nameWithType: MyTaskHandlerTest.TestDescriptionWorkTaskNegative
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestGetNoOfTasksMock
  name: TestGetNoOfTasksMock()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestGetNoOfTasksMock
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestGetNoOfTasksMock
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestGetNoOfTasksMock()
  nameWithType: MyTaskHandlerTest.TestGetNoOfTasksMock()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestGetNoOfTasksMock*
  name: TestGetNoOfTasksMock
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestGetNoOfTasksMock_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestGetNoOfTasksMock
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestGetNoOfTasksMock
  nameWithType: MyTaskHandlerTest.TestGetNoOfTasksMock
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestGetOneTask
  name: TestGetOneTask()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestGetOneTask
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestGetOneTask
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestGetOneTask()
  nameWithType: MyTaskHandlerTest.TestGetOneTask()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestGetOneTask*
  name: TestGetOneTask
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestGetOneTask_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestGetOneTask
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestGetOneTask
  nameWithType: MyTaskHandlerTest.TestGetOneTask
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestGetTasks
  name: TestGetTasks()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestGetTasks
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestGetTasks
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestGetTasks()
  nameWithType: MyTaskHandlerTest.TestGetTasks()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestGetTasks*
  name: TestGetTasks
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestGetTasks_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestGetTasks
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestGetTasks
  nameWithType: MyTaskHandlerTest.TestGetTasks
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTask
  name: TestUpdatePrivateTask()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestUpdatePrivateTask
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTask
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTask()
  nameWithType: MyTaskHandlerTest.TestUpdatePrivateTask()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTask*
  name: TestUpdatePrivateTask
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestUpdatePrivateTask_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTask
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTask
  nameWithType: MyTaskHandlerTest.TestUpdatePrivateTask
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTaskNegative
  name: TestUpdatePrivateTaskNegative()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestUpdatePrivateTaskNegative
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTaskNegative
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTaskNegative()
  nameWithType: MyTaskHandlerTest.TestUpdatePrivateTaskNegative()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTaskNegative*
  name: TestUpdatePrivateTaskNegative
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestUpdatePrivateTaskNegative_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTaskNegative
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestUpdatePrivateTaskNegative
  nameWithType: MyTaskHandlerTest.TestUpdatePrivateTaskNegative
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTask
  name: TestUpdateWorkTask()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestUpdateWorkTask
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTask
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTask()
  nameWithType: MyTaskHandlerTest.TestUpdateWorkTask()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTask*
  name: TestUpdateWorkTask
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestUpdateWorkTask_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTask
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTask
  nameWithType: MyTaskHandlerTest.TestUpdateWorkTask
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTaskNegative
  name: TestUpdateWorkTaskNegative()
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestUpdateWorkTaskNegative
  commentId: M:MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTaskNegative
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTaskNegative()
  nameWithType: MyTaskHandlerTest.TestUpdateWorkTaskNegative()
- uid: MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTaskNegative*
  name: TestUpdateWorkTaskNegative
  href: api/MyPlanner.Tests.MyTaskHandlerTest.html#MyPlanner_Tests_MyTaskHandlerTest_TestUpdateWorkTaskNegative_
  commentId: Overload:MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTaskNegative
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskHandlerTest.TestUpdateWorkTaskNegative
  nameWithType: MyTaskHandlerTest.TestUpdateWorkTaskNegative
- uid: MyPlanner.Tests.MyTaskTest
  name: MyTaskTest
  href: api/MyPlanner.Tests.MyTaskTest.html
  commentId: T:MyPlanner.Tests.MyTaskTest
  fullName: MyPlanner.Tests.MyTaskTest
  nameWithType: MyTaskTest
- uid: MyPlanner.Tests.MyTaskTest.Setup
  name: Setup()
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_Setup
  commentId: M:MyPlanner.Tests.MyTaskTest.Setup
  fullName: MyPlanner.Tests.MyTaskTest.Setup()
  nameWithType: MyTaskTest.Setup()
- uid: MyPlanner.Tests.MyTaskTest.Setup*
  name: Setup
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_Setup_
  commentId: Overload:MyPlanner.Tests.MyTaskTest.Setup
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskTest.Setup
  nameWithType: MyTaskTest.Setup
- uid: MyPlanner.Tests.MyTaskTest.TestCreateMyTask
  name: TestCreateMyTask()
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestCreateMyTask
  commentId: M:MyPlanner.Tests.MyTaskTest.TestCreateMyTask
  fullName: MyPlanner.Tests.MyTaskTest.TestCreateMyTask()
  nameWithType: MyTaskTest.TestCreateMyTask()
- uid: MyPlanner.Tests.MyTaskTest.TestCreateMyTask*
  name: TestCreateMyTask
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestCreateMyTask_
  commentId: Overload:MyPlanner.Tests.MyTaskTest.TestCreateMyTask
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskTest.TestCreateMyTask
  nameWithType: MyTaskTest.TestCreateMyTask
- uid: MyPlanner.Tests.MyTaskTest.TestDescriptionCompleted
  name: TestDescriptionCompleted()
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestDescriptionCompleted
  commentId: M:MyPlanner.Tests.MyTaskTest.TestDescriptionCompleted
  fullName: MyPlanner.Tests.MyTaskTest.TestDescriptionCompleted()
  nameWithType: MyTaskTest.TestDescriptionCompleted()
- uid: MyPlanner.Tests.MyTaskTest.TestDescriptionCompleted*
  name: TestDescriptionCompleted
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestDescriptionCompleted_
  commentId: Overload:MyPlanner.Tests.MyTaskTest.TestDescriptionCompleted
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskTest.TestDescriptionCompleted
  nameWithType: MyTaskTest.TestDescriptionCompleted
- uid: MyPlanner.Tests.MyTaskTest.TestDescriptionNotCompleted
  name: TestDescriptionNotCompleted()
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestDescriptionNotCompleted
  commentId: M:MyPlanner.Tests.MyTaskTest.TestDescriptionNotCompleted
  fullName: MyPlanner.Tests.MyTaskTest.TestDescriptionNotCompleted()
  nameWithType: MyTaskTest.TestDescriptionNotCompleted()
- uid: MyPlanner.Tests.MyTaskTest.TestDescriptionNotCompleted*
  name: TestDescriptionNotCompleted
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestDescriptionNotCompleted_
  commentId: Overload:MyPlanner.Tests.MyTaskTest.TestDescriptionNotCompleted
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskTest.TestDescriptionNotCompleted
  nameWithType: MyTaskTest.TestDescriptionNotCompleted
- uid: MyPlanner.Tests.MyTaskTest.TestGetInformation
  name: TestGetInformation()
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestGetInformation
  commentId: M:MyPlanner.Tests.MyTaskTest.TestGetInformation
  fullName: MyPlanner.Tests.MyTaskTest.TestGetInformation()
  nameWithType: MyTaskTest.TestGetInformation()
- uid: MyPlanner.Tests.MyTaskTest.TestGetInformation*
  name: TestGetInformation
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestGetInformation_
  commentId: Overload:MyPlanner.Tests.MyTaskTest.TestGetInformation
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskTest.TestGetInformation
  nameWithType: MyTaskTest.TestGetInformation
- uid: MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskPrivate
  name: TestUpdateMyTaskPrivate()
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestUpdateMyTaskPrivate
  commentId: M:MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskPrivate
  fullName: MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskPrivate()
  nameWithType: MyTaskTest.TestUpdateMyTaskPrivate()
- uid: MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskPrivate*
  name: TestUpdateMyTaskPrivate
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestUpdateMyTaskPrivate_
  commentId: Overload:MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskPrivate
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskPrivate
  nameWithType: MyTaskTest.TestUpdateMyTaskPrivate
- uid: MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskWork
  name: TestUpdateMyTaskWork()
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestUpdateMyTaskWork
  commentId: M:MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskWork
  fullName: MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskWork()
  nameWithType: MyTaskTest.TestUpdateMyTaskWork()
- uid: MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskWork*
  name: TestUpdateMyTaskWork
  href: api/MyPlanner.Tests.MyTaskTest.html#MyPlanner_Tests_MyTaskTest_TestUpdateMyTaskWork_
  commentId: Overload:MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskWork
  isSpec: "True"
  fullName: MyPlanner.Tests.MyTaskTest.TestUpdateMyTaskWork
  nameWithType: MyTaskTest.TestUpdateMyTaskWork
- uid: MyPlanner.Tests.PlannerTest
  name: PlannerTest
  href: api/MyPlanner.Tests.PlannerTest.html
  commentId: T:MyPlanner.Tests.PlannerTest
  fullName: MyPlanner.Tests.PlannerTest
  nameWithType: PlannerTest
- uid: MyPlanner.Tests.PlannerTest.Setup
  name: Setup()
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_Setup
  commentId: M:MyPlanner.Tests.PlannerTest.Setup
  fullName: MyPlanner.Tests.PlannerTest.Setup()
  nameWithType: PlannerTest.Setup()
- uid: MyPlanner.Tests.PlannerTest.Setup*
  name: Setup
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_Setup_
  commentId: Overload:MyPlanner.Tests.PlannerTest.Setup
  isSpec: "True"
  fullName: MyPlanner.Tests.PlannerTest.Setup
  nameWithType: PlannerTest.Setup
- uid: MyPlanner.Tests.PlannerTest.TearDown
  name: TearDown()
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_TearDown
  commentId: M:MyPlanner.Tests.PlannerTest.TearDown
  fullName: MyPlanner.Tests.PlannerTest.TearDown()
  nameWithType: PlannerTest.TearDown()
- uid: MyPlanner.Tests.PlannerTest.TearDown*
  name: TearDown
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_TearDown_
  commentId: Overload:MyPlanner.Tests.PlannerTest.TearDown
  isSpec: "True"
  fullName: MyPlanner.Tests.PlannerTest.TearDown
  nameWithType: PlannerTest.TearDown
- uid: MyPlanner.Tests.PlannerTest.TestCreatePlanner
  name: TestCreatePlanner()
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_TestCreatePlanner
  commentId: M:MyPlanner.Tests.PlannerTest.TestCreatePlanner
  fullName: MyPlanner.Tests.PlannerTest.TestCreatePlanner()
  nameWithType: PlannerTest.TestCreatePlanner()
- uid: MyPlanner.Tests.PlannerTest.TestCreatePlanner*
  name: TestCreatePlanner
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_TestCreatePlanner_
  commentId: Overload:MyPlanner.Tests.PlannerTest.TestCreatePlanner
  isSpec: "True"
  fullName: MyPlanner.Tests.PlannerTest.TestCreatePlanner
  nameWithType: PlannerTest.TestCreatePlanner
- uid: MyPlanner.Tests.PlannerTest.TestInvalidMenuOption
  name: TestInvalidMenuOption()
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_TestInvalidMenuOption
  commentId: M:MyPlanner.Tests.PlannerTest.TestInvalidMenuOption
  fullName: MyPlanner.Tests.PlannerTest.TestInvalidMenuOption()
  nameWithType: PlannerTest.TestInvalidMenuOption()
- uid: MyPlanner.Tests.PlannerTest.TestInvalidMenuOption*
  name: TestInvalidMenuOption
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_TestInvalidMenuOption_
  commentId: Overload:MyPlanner.Tests.PlannerTest.TestInvalidMenuOption
  isSpec: "True"
  fullName: MyPlanner.Tests.PlannerTest.TestInvalidMenuOption
  nameWithType: PlannerTest.TestInvalidMenuOption
- uid: MyPlanner.Tests.PlannerTest.TestMenuEnd
  name: TestMenuEnd()
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_TestMenuEnd
  commentId: M:MyPlanner.Tests.PlannerTest.TestMenuEnd
  fullName: MyPlanner.Tests.PlannerTest.TestMenuEnd()
  nameWithType: PlannerTest.TestMenuEnd()
- uid: MyPlanner.Tests.PlannerTest.TestMenuEnd*
  name: TestMenuEnd
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_TestMenuEnd_
  commentId: Overload:MyPlanner.Tests.PlannerTest.TestMenuEnd
  isSpec: "True"
  fullName: MyPlanner.Tests.PlannerTest.TestMenuEnd
  nameWithType: PlannerTest.TestMenuEnd
- uid: MyPlanner.Tests.PlannerTest.TestShowMenu
  name: TestShowMenu()
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_TestShowMenu
  commentId: M:MyPlanner.Tests.PlannerTest.TestShowMenu
  fullName: MyPlanner.Tests.PlannerTest.TestShowMenu()
  nameWithType: PlannerTest.TestShowMenu()
- uid: MyPlanner.Tests.PlannerTest.TestShowMenu*
  name: TestShowMenu
  href: api/MyPlanner.Tests.PlannerTest.html#MyPlanner_Tests_PlannerTest_TestShowMenu_
  commentId: Overload:MyPlanner.Tests.PlannerTest.TestShowMenu
  isSpec: "True"
  fullName: MyPlanner.Tests.PlannerTest.TestShowMenu
  nameWithType: PlannerTest.TestShowMenu
- uid: MyPlanner.Tests.PrivateTaskTest
  name: PrivateTaskTest
  href: api/MyPlanner.Tests.PrivateTaskTest.html
  commentId: T:MyPlanner.Tests.PrivateTaskTest
  fullName: MyPlanner.Tests.PrivateTaskTest
  nameWithType: PrivateTaskTest
- uid: MyPlanner.Tests.PrivateTaskTest.CreatePrivateTask
  name: CreatePrivateTask()
  href: api/MyPlanner.Tests.PrivateTaskTest.html#MyPlanner_Tests_PrivateTaskTest_CreatePrivateTask
  commentId: M:MyPlanner.Tests.PrivateTaskTest.CreatePrivateTask
  fullName: MyPlanner.Tests.PrivateTaskTest.CreatePrivateTask()
  nameWithType: PrivateTaskTest.CreatePrivateTask()
- uid: MyPlanner.Tests.PrivateTaskTest.CreatePrivateTask*
  name: CreatePrivateTask
  href: api/MyPlanner.Tests.PrivateTaskTest.html#MyPlanner_Tests_PrivateTaskTest_CreatePrivateTask_
  commentId: Overload:MyPlanner.Tests.PrivateTaskTest.CreatePrivateTask
  isSpec: "True"
  fullName: MyPlanner.Tests.PrivateTaskTest.CreatePrivateTask
  nameWithType: PrivateTaskTest.CreatePrivateTask
- uid: MyPlanner.Tests.PrivateTaskTest.Setup
  name: Setup()
  href: api/MyPlanner.Tests.PrivateTaskTest.html#MyPlanner_Tests_PrivateTaskTest_Setup
  commentId: M:MyPlanner.Tests.PrivateTaskTest.Setup
  fullName: MyPlanner.Tests.PrivateTaskTest.Setup()
  nameWithType: PrivateTaskTest.Setup()
- uid: MyPlanner.Tests.PrivateTaskTest.Setup*
  name: Setup
  href: api/MyPlanner.Tests.PrivateTaskTest.html#MyPlanner_Tests_PrivateTaskTest_Setup_
  commentId: Overload:MyPlanner.Tests.PrivateTaskTest.Setup
  isSpec: "True"
  fullName: MyPlanner.Tests.PrivateTaskTest.Setup
  nameWithType: PrivateTaskTest.Setup
- uid: MyPlanner.Tests.PrivateTaskTest.TestDescription
  name: TestDescription()
  href: api/MyPlanner.Tests.PrivateTaskTest.html#MyPlanner_Tests_PrivateTaskTest_TestDescription
  commentId: M:MyPlanner.Tests.PrivateTaskTest.TestDescription
  fullName: MyPlanner.Tests.PrivateTaskTest.TestDescription()
  nameWithType: PrivateTaskTest.TestDescription()
- uid: MyPlanner.Tests.PrivateTaskTest.TestDescription*
  name: TestDescription
  href: api/MyPlanner.Tests.PrivateTaskTest.html#MyPlanner_Tests_PrivateTaskTest_TestDescription_
  commentId: Overload:MyPlanner.Tests.PrivateTaskTest.TestDescription
  isSpec: "True"
  fullName: MyPlanner.Tests.PrivateTaskTest.TestDescription
  nameWithType: PrivateTaskTest.TestDescription
- uid: MyPlanner.Tests.PrivateTaskTest.TestGetInformation
  name: TestGetInformation()
  href: api/MyPlanner.Tests.PrivateTaskTest.html#MyPlanner_Tests_PrivateTaskTest_TestGetInformation
  commentId: M:MyPlanner.Tests.PrivateTaskTest.TestGetInformation
  fullName: MyPlanner.Tests.PrivateTaskTest.TestGetInformation()
  nameWithType: PrivateTaskTest.TestGetInformation()
- uid: MyPlanner.Tests.PrivateTaskTest.TestGetInformation*
  name: TestGetInformation
  href: api/MyPlanner.Tests.PrivateTaskTest.html#MyPlanner_Tests_PrivateTaskTest_TestGetInformation_
  commentId: Overload:MyPlanner.Tests.PrivateTaskTest.TestGetInformation
  isSpec: "True"
  fullName: MyPlanner.Tests.PrivateTaskTest.TestGetInformation
  nameWithType: PrivateTaskTest.TestGetInformation
- uid: MyPlanner.Tests.WorkTaskTest
  name: WorkTaskTest
  href: api/MyPlanner.Tests.WorkTaskTest.html
  commentId: T:MyPlanner.Tests.WorkTaskTest
  fullName: MyPlanner.Tests.WorkTaskTest
  nameWithType: WorkTaskTest
- uid: MyPlanner.Tests.WorkTaskTest.CreateWorkTask(System.Int32)
  name: CreateWorkTask(int)
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_CreateWorkTask_System_Int32_
  commentId: M:MyPlanner.Tests.WorkTaskTest.CreateWorkTask(System.Int32)
  name.vb: CreateWorkTask(Integer)
  fullName: MyPlanner.Tests.WorkTaskTest.CreateWorkTask(int)
  fullName.vb: MyPlanner.Tests.WorkTaskTest.CreateWorkTask(Integer)
  nameWithType: WorkTaskTest.CreateWorkTask(int)
  nameWithType.vb: WorkTaskTest.CreateWorkTask(Integer)
- uid: MyPlanner.Tests.WorkTaskTest.CreateWorkTask*
  name: CreateWorkTask
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_CreateWorkTask_
  commentId: Overload:MyPlanner.Tests.WorkTaskTest.CreateWorkTask
  isSpec: "True"
  fullName: MyPlanner.Tests.WorkTaskTest.CreateWorkTask
  nameWithType: WorkTaskTest.CreateWorkTask
- uid: MyPlanner.Tests.WorkTaskTest.Setup
  name: Setup()
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_Setup
  commentId: M:MyPlanner.Tests.WorkTaskTest.Setup
  fullName: MyPlanner.Tests.WorkTaskTest.Setup()
  nameWithType: WorkTaskTest.Setup()
- uid: MyPlanner.Tests.WorkTaskTest.Setup*
  name: Setup
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_Setup_
  commentId: Overload:MyPlanner.Tests.WorkTaskTest.Setup
  isSpec: "True"
  fullName: MyPlanner.Tests.WorkTaskTest.Setup
  nameWithType: WorkTaskTest.Setup
- uid: MyPlanner.Tests.WorkTaskTest.TestDescription
  name: TestDescription()
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_TestDescription
  commentId: M:MyPlanner.Tests.WorkTaskTest.TestDescription
  fullName: MyPlanner.Tests.WorkTaskTest.TestDescription()
  nameWithType: WorkTaskTest.TestDescription()
- uid: MyPlanner.Tests.WorkTaskTest.TestDescription*
  name: TestDescription
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_TestDescription_
  commentId: Overload:MyPlanner.Tests.WorkTaskTest.TestDescription
  isSpec: "True"
  fullName: MyPlanner.Tests.WorkTaskTest.TestDescription
  nameWithType: WorkTaskTest.TestDescription
- uid: MyPlanner.Tests.WorkTaskTest.TestGetInformation
  name: TestGetInformation()
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_TestGetInformation
  commentId: M:MyPlanner.Tests.WorkTaskTest.TestGetInformation
  fullName: MyPlanner.Tests.WorkTaskTest.TestGetInformation()
  nameWithType: WorkTaskTest.TestGetInformation()
- uid: MyPlanner.Tests.WorkTaskTest.TestGetInformation*
  name: TestGetInformation
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_TestGetInformation_
  commentId: Overload:MyPlanner.Tests.WorkTaskTest.TestGetInformation
  isSpec: "True"
  fullName: MyPlanner.Tests.WorkTaskTest.TestGetInformation
  nameWithType: WorkTaskTest.TestGetInformation
- uid: MyPlanner.Tests.WorkTaskTest.TestGetProgression(System.Int32,System.Int32)
  name: TestGetProgression(int, int)
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_TestGetProgression_System_Int32_System_Int32_
  commentId: M:MyPlanner.Tests.WorkTaskTest.TestGetProgression(System.Int32,System.Int32)
  name.vb: TestGetProgression(Integer, Integer)
  fullName: MyPlanner.Tests.WorkTaskTest.TestGetProgression(int, int)
  fullName.vb: MyPlanner.Tests.WorkTaskTest.TestGetProgression(Integer, Integer)
  nameWithType: WorkTaskTest.TestGetProgression(int, int)
  nameWithType.vb: WorkTaskTest.TestGetProgression(Integer, Integer)
- uid: MyPlanner.Tests.WorkTaskTest.TestGetProgression*
  name: TestGetProgression
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_TestGetProgression_
  commentId: Overload:MyPlanner.Tests.WorkTaskTest.TestGetProgression
  isSpec: "True"
  fullName: MyPlanner.Tests.WorkTaskTest.TestGetProgression
  nameWithType: WorkTaskTest.TestGetProgression
- uid: MyPlanner.Tests.WorkTaskTest.TestIsCompleted(System.Int32,System.Boolean)
  name: TestIsCompleted(int, bool)
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_TestIsCompleted_System_Int32_System_Boolean_
  commentId: M:MyPlanner.Tests.WorkTaskTest.TestIsCompleted(System.Int32,System.Boolean)
  name.vb: TestIsCompleted(Integer, Boolean)
  fullName: MyPlanner.Tests.WorkTaskTest.TestIsCompleted(int, bool)
  fullName.vb: MyPlanner.Tests.WorkTaskTest.TestIsCompleted(Integer, Boolean)
  nameWithType: WorkTaskTest.TestIsCompleted(int, bool)
  nameWithType.vb: WorkTaskTest.TestIsCompleted(Integer, Boolean)
- uid: MyPlanner.Tests.WorkTaskTest.TestIsCompleted*
  name: TestIsCompleted
  href: api/MyPlanner.Tests.WorkTaskTest.html#MyPlanner_Tests_WorkTaskTest_TestIsCompleted_
  commentId: Overload:MyPlanner.Tests.WorkTaskTest.TestIsCompleted
  isSpec: "True"
  fullName: MyPlanner.Tests.WorkTaskTest.TestIsCompleted
  nameWithType: WorkTaskTest.TestIsCompleted
- uid: MyPlanner.src
  name: MyPlanner.src
  href: api/MyPlanner.src.html
  commentId: N:MyPlanner.src
  fullName: MyPlanner.src
  nameWithType: MyPlanner.src
- uid: MyPlanner.src.FileHandler
  name: FileHandler
  href: api/MyPlanner.src.FileHandler.html
  commentId: T:MyPlanner.src.FileHandler
  fullName: MyPlanner.src.FileHandler
  nameWithType: FileHandler
- uid: MyPlanner.src.FileHandler.#ctor(System.String)
  name: FileHandler(string)
  href: api/MyPlanner.src.FileHandler.html#MyPlanner_src_FileHandler__ctor_System_String_
  commentId: M:MyPlanner.src.FileHandler.#ctor(System.String)
  name.vb: New(String)
  fullName: MyPlanner.src.FileHandler.FileHandler(string)
  fullName.vb: MyPlanner.src.FileHandler.New(String)
  nameWithType: FileHandler.FileHandler(string)
  nameWithType.vb: FileHandler.New(String)
- uid: MyPlanner.src.FileHandler.#ctor*
  name: FileHandler
  href: api/MyPlanner.src.FileHandler.html#MyPlanner_src_FileHandler__ctor_
  commentId: Overload:MyPlanner.src.FileHandler.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyPlanner.src.FileHandler.FileHandler
  fullName.vb: MyPlanner.src.FileHandler.New
  nameWithType: FileHandler.FileHandler
  nameWithType.vb: FileHandler.New
- uid: MyPlanner.src.FileHandler.Read
  name: Read()
  href: api/MyPlanner.src.FileHandler.html#MyPlanner_src_FileHandler_Read
  commentId: M:MyPlanner.src.FileHandler.Read
  fullName: MyPlanner.src.FileHandler.Read()
  nameWithType: FileHandler.Read()
- uid: MyPlanner.src.FileHandler.Read*
  name: Read
  href: api/MyPlanner.src.FileHandler.html#MyPlanner_src_FileHandler_Read_
  commentId: Overload:MyPlanner.src.FileHandler.Read
  isSpec: "True"
  fullName: MyPlanner.src.FileHandler.Read
  nameWithType: FileHandler.Read
- uid: MyPlanner.src.FileHandler.Save(System.String[])
  name: Save(string[])
  href: api/MyPlanner.src.FileHandler.html#MyPlanner_src_FileHandler_Save_System_String___
  commentId: M:MyPlanner.src.FileHandler.Save(System.String[])
  name.vb: Save(String())
  fullName: MyPlanner.src.FileHandler.Save(string[])
  fullName.vb: MyPlanner.src.FileHandler.Save(String())
  nameWithType: FileHandler.Save(string[])
  nameWithType.vb: FileHandler.Save(String())
- uid: MyPlanner.src.FileHandler.Save*
  name: Save
  href: api/MyPlanner.src.FileHandler.html#MyPlanner_src_FileHandler_Save_
  commentId: Overload:MyPlanner.src.FileHandler.Save
  isSpec: "True"
  fullName: MyPlanner.src.FileHandler.Save
  nameWithType: FileHandler.Save
- uid: MyPlanner.src.Helpers
  name: Helpers
  href: api/MyPlanner.src.Helpers.html
  commentId: T:MyPlanner.src.Helpers
  fullName: MyPlanner.src.Helpers
  nameWithType: Helpers
- uid: MyPlanner.src.Helpers.GetTerminalReady(System.String)
  name: GetTerminalReady(string)
  href: api/MyPlanner.src.Helpers.html#MyPlanner_src_Helpers_GetTerminalReady_System_String_
  commentId: M:MyPlanner.src.Helpers.GetTerminalReady(System.String)
  name.vb: GetTerminalReady(String)
  fullName: MyPlanner.src.Helpers.GetTerminalReady(string)
  fullName.vb: MyPlanner.src.Helpers.GetTerminalReady(String)
  nameWithType: Helpers.GetTerminalReady(string)
  nameWithType.vb: Helpers.GetTerminalReady(String)
- uid: MyPlanner.src.Helpers.GetTerminalReady*
  name: GetTerminalReady
  href: api/MyPlanner.src.Helpers.html#MyPlanner_src_Helpers_GetTerminalReady_
  commentId: Overload:MyPlanner.src.Helpers.GetTerminalReady
  isSpec: "True"
  fullName: MyPlanner.src.Helpers.GetTerminalReady
  nameWithType: Helpers.GetTerminalReady
- uid: MyPlanner.src.Helpers.ReadIntFromTerminal(System.String)
  name: ReadIntFromTerminal(string)
  href: api/MyPlanner.src.Helpers.html#MyPlanner_src_Helpers_ReadIntFromTerminal_System_String_
  commentId: M:MyPlanner.src.Helpers.ReadIntFromTerminal(System.String)
  name.vb: ReadIntFromTerminal(String)
  fullName: MyPlanner.src.Helpers.ReadIntFromTerminal(string)
  fullName.vb: MyPlanner.src.Helpers.ReadIntFromTerminal(String)
  nameWithType: Helpers.ReadIntFromTerminal(string)
  nameWithType.vb: Helpers.ReadIntFromTerminal(String)
- uid: MyPlanner.src.Helpers.ReadIntFromTerminal*
  name: ReadIntFromTerminal
  href: api/MyPlanner.src.Helpers.html#MyPlanner_src_Helpers_ReadIntFromTerminal_
  commentId: Overload:MyPlanner.src.Helpers.ReadIntFromTerminal
  isSpec: "True"
  fullName: MyPlanner.src.Helpers.ReadIntFromTerminal
  nameWithType: Helpers.ReadIntFromTerminal
- uid: MyPlanner.src.Helpers.ReadStringFromTerminal(System.String)
  name: ReadStringFromTerminal(string)
  href: api/MyPlanner.src.Helpers.html#MyPlanner_src_Helpers_ReadStringFromTerminal_System_String_
  commentId: M:MyPlanner.src.Helpers.ReadStringFromTerminal(System.String)
  name.vb: ReadStringFromTerminal(String)
  fullName: MyPlanner.src.Helpers.ReadStringFromTerminal(string)
  fullName.vb: MyPlanner.src.Helpers.ReadStringFromTerminal(String)
  nameWithType: Helpers.ReadStringFromTerminal(string)
  nameWithType.vb: Helpers.ReadStringFromTerminal(String)
- uid: MyPlanner.src.Helpers.ReadStringFromTerminal*
  name: ReadStringFromTerminal
  href: api/MyPlanner.src.Helpers.html#MyPlanner_src_Helpers_ReadStringFromTerminal_
  commentId: Overload:MyPlanner.src.Helpers.ReadStringFromTerminal
  isSpec: "True"
  fullName: MyPlanner.src.Helpers.ReadStringFromTerminal
  nameWithType: Helpers.ReadStringFromTerminal
- uid: MyPlanner.src.Helpers.StringToInt(System.String)
  name: StringToInt(string)
  href: api/MyPlanner.src.Helpers.html#MyPlanner_src_Helpers_StringToInt_System_String_
  commentId: M:MyPlanner.src.Helpers.StringToInt(System.String)
  name.vb: StringToInt(String)
  fullName: MyPlanner.src.Helpers.StringToInt(string)
  fullName.vb: MyPlanner.src.Helpers.StringToInt(String)
  nameWithType: Helpers.StringToInt(string)
  nameWithType.vb: Helpers.StringToInt(String)
- uid: MyPlanner.src.Helpers.StringToInt*
  name: StringToInt
  href: api/MyPlanner.src.Helpers.html#MyPlanner_src_Helpers_StringToInt_
  commentId: Overload:MyPlanner.src.Helpers.StringToInt
  isSpec: "True"
  fullName: MyPlanner.src.Helpers.StringToInt
  nameWithType: Helpers.StringToInt
- uid: MyPlanner.src.IFileHandler
  name: IFileHandler
  href: api/MyPlanner.src.IFileHandler.html
  commentId: T:MyPlanner.src.IFileHandler
  fullName: MyPlanner.src.IFileHandler
  nameWithType: IFileHandler
- uid: MyPlanner.src.IFileHandler.Read
  name: Read()
  href: api/MyPlanner.src.IFileHandler.html#MyPlanner_src_IFileHandler_Read
  commentId: M:MyPlanner.src.IFileHandler.Read
  fullName: MyPlanner.src.IFileHandler.Read()
  nameWithType: IFileHandler.Read()
- uid: MyPlanner.src.IFileHandler.Read*
  name: Read
  href: api/MyPlanner.src.IFileHandler.html#MyPlanner_src_IFileHandler_Read_
  commentId: Overload:MyPlanner.src.IFileHandler.Read
  isSpec: "True"
  fullName: MyPlanner.src.IFileHandler.Read
  nameWithType: IFileHandler.Read
- uid: MyPlanner.src.IFileHandler.Save(System.String[])
  name: Save(string[])
  href: api/MyPlanner.src.IFileHandler.html#MyPlanner_src_IFileHandler_Save_System_String___
  commentId: M:MyPlanner.src.IFileHandler.Save(System.String[])
  name.vb: Save(String())
  fullName: MyPlanner.src.IFileHandler.Save(string[])
  fullName.vb: MyPlanner.src.IFileHandler.Save(String())
  nameWithType: IFileHandler.Save(string[])
  nameWithType.vb: IFileHandler.Save(String())
- uid: MyPlanner.src.IFileHandler.Save*
  name: Save
  href: api/MyPlanner.src.IFileHandler.html#MyPlanner_src_IFileHandler_Save_
  commentId: Overload:MyPlanner.src.IFileHandler.Save
  isSpec: "True"
  fullName: MyPlanner.src.IFileHandler.Save
  nameWithType: IFileHandler.Save
- uid: MyPlanner.src.IPlanner
  name: IPlanner
  href: api/MyPlanner.src.IPlanner.html
  commentId: T:MyPlanner.src.IPlanner
  fullName: MyPlanner.src.IPlanner
  nameWithType: IPlanner
- uid: MyPlanner.src.IPlanner.GetNoOfTasks
  name: GetNoOfTasks()
  href: api/MyPlanner.src.IPlanner.html#MyPlanner_src_IPlanner_GetNoOfTasks
  commentId: M:MyPlanner.src.IPlanner.GetNoOfTasks
  fullName: MyPlanner.src.IPlanner.GetNoOfTasks()
  nameWithType: IPlanner.GetNoOfTasks()
- uid: MyPlanner.src.IPlanner.GetNoOfTasks*
  name: GetNoOfTasks
  href: api/MyPlanner.src.IPlanner.html#MyPlanner_src_IPlanner_GetNoOfTasks_
  commentId: Overload:MyPlanner.src.IPlanner.GetNoOfTasks
  isSpec: "True"
  fullName: MyPlanner.src.IPlanner.GetNoOfTasks
  nameWithType: IPlanner.GetNoOfTasks
- uid: MyPlanner.src.IPlanner.Run
  name: Run()
  href: api/MyPlanner.src.IPlanner.html#MyPlanner_src_IPlanner_Run
  commentId: M:MyPlanner.src.IPlanner.Run
  fullName: MyPlanner.src.IPlanner.Run()
  nameWithType: IPlanner.Run()
- uid: MyPlanner.src.IPlanner.Run*
  name: Run
  href: api/MyPlanner.src.IPlanner.html#MyPlanner_src_IPlanner_Run_
  commentId: Overload:MyPlanner.src.IPlanner.Run
  isSpec: "True"
  fullName: MyPlanner.src.IPlanner.Run
  nameWithType: IPlanner.Run
- uid: MyPlanner.src.MyTask
  name: MyTask
  href: api/MyPlanner.src.MyTask.html
  commentId: T:MyPlanner.src.MyTask
  fullName: MyPlanner.src.MyTask
  nameWithType: MyTask
- uid: MyPlanner.src.MyTask.#ctor(System.String,System.String,System.DateTime)
  name: MyTask(string, string, DateTime)
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask__ctor_System_String_System_String_System_DateTime_
  commentId: M:MyPlanner.src.MyTask.#ctor(System.String,System.String,System.DateTime)
  name.vb: New(String, String, Date)
  fullName: MyPlanner.src.MyTask.MyTask(string, string, System.DateTime)
  fullName.vb: MyPlanner.src.MyTask.New(String, String, Date)
  nameWithType: MyTask.MyTask(string, string, DateTime)
  nameWithType.vb: MyTask.New(String, String, Date)
- uid: MyPlanner.src.MyTask.#ctor*
  name: MyTask
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask__ctor_
  commentId: Overload:MyPlanner.src.MyTask.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyPlanner.src.MyTask.MyTask
  fullName.vb: MyPlanner.src.MyTask.New
  nameWithType: MyTask.MyTask
  nameWithType.vb: MyTask.New
- uid: MyPlanner.src.MyTask.Completed
  name: Completed()
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_Completed
  commentId: M:MyPlanner.src.MyTask.Completed
  fullName: MyPlanner.src.MyTask.Completed()
  nameWithType: MyTask.Completed()
- uid: MyPlanner.src.MyTask.Completed*
  name: Completed
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_Completed_
  commentId: Overload:MyPlanner.src.MyTask.Completed
  isSpec: "True"
  fullName: MyPlanner.src.MyTask.Completed
  nameWithType: MyTask.Completed
- uid: MyPlanner.src.MyTask.GetDescription
  name: GetDescription()
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_GetDescription
  commentId: M:MyPlanner.src.MyTask.GetDescription
  fullName: MyPlanner.src.MyTask.GetDescription()
  nameWithType: MyTask.GetDescription()
- uid: MyPlanner.src.MyTask.GetDescription*
  name: GetDescription
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_GetDescription_
  commentId: Overload:MyPlanner.src.MyTask.GetDescription
  isSpec: "True"
  fullName: MyPlanner.src.MyTask.GetDescription
  nameWithType: MyTask.GetDescription
- uid: MyPlanner.src.MyTask.GetDueDate
  name: GetDueDate()
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_GetDueDate
  commentId: M:MyPlanner.src.MyTask.GetDueDate
  fullName: MyPlanner.src.MyTask.GetDueDate()
  nameWithType: MyTask.GetDueDate()
- uid: MyPlanner.src.MyTask.GetDueDate*
  name: GetDueDate
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_GetDueDate_
  commentId: Overload:MyPlanner.src.MyTask.GetDueDate
  isSpec: "True"
  fullName: MyPlanner.src.MyTask.GetDueDate
  nameWithType: MyTask.GetDueDate
- uid: MyPlanner.src.MyTask.GetInformation
  name: GetInformation()
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_GetInformation
  commentId: M:MyPlanner.src.MyTask.GetInformation
  fullName: MyPlanner.src.MyTask.GetInformation()
  nameWithType: MyTask.GetInformation()
- uid: MyPlanner.src.MyTask.GetInformation*
  name: GetInformation
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_GetInformation_
  commentId: Overload:MyPlanner.src.MyTask.GetInformation
  isSpec: "True"
  fullName: MyPlanner.src.MyTask.GetInformation
  nameWithType: MyTask.GetInformation
- uid: MyPlanner.src.MyTask.GetTitle
  name: GetTitle()
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_GetTitle
  commentId: M:MyPlanner.src.MyTask.GetTitle
  fullName: MyPlanner.src.MyTask.GetTitle()
  nameWithType: MyTask.GetTitle()
- uid: MyPlanner.src.MyTask.GetTitle*
  name: GetTitle
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_GetTitle_
  commentId: Overload:MyPlanner.src.MyTask.GetTitle
  isSpec: "True"
  fullName: MyPlanner.src.MyTask.GetTitle
  nameWithType: MyTask.GetTitle
- uid: MyPlanner.src.MyTask.IsCompleted
  name: IsCompleted()
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_IsCompleted
  commentId: M:MyPlanner.src.MyTask.IsCompleted
  fullName: MyPlanner.src.MyTask.IsCompleted()
  nameWithType: MyTask.IsCompleted()
- uid: MyPlanner.src.MyTask.IsCompleted*
  name: IsCompleted
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_IsCompleted_
  commentId: Overload:MyPlanner.src.MyTask.IsCompleted
  isSpec: "True"
  fullName: MyPlanner.src.MyTask.IsCompleted
  nameWithType: MyTask.IsCompleted
- uid: MyPlanner.src.MyTask.Update(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)
  name: Update(int, int, int, string, string, string, DateTime)
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_Update_System_Int32_System_Int32_System_Int32_System_String_System_String_System_String_System_DateTime_
  commentId: M:MyPlanner.src.MyTask.Update(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)
  name.vb: Update(Integer, Integer, Integer, String, String, String, Date)
  fullName: MyPlanner.src.MyTask.Update(int, int, int, string, string, string, System.DateTime)
  fullName.vb: MyPlanner.src.MyTask.Update(Integer, Integer, Integer, String, String, String, Date)
  nameWithType: MyTask.Update(int, int, int, string, string, string, DateTime)
  nameWithType.vb: MyTask.Update(Integer, Integer, Integer, String, String, String, Date)
- uid: MyPlanner.src.MyTask.Update(System.String,System.String,System.String,System.DateTime)
  name: Update(string, string, string, DateTime)
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_Update_System_String_System_String_System_String_System_DateTime_
  commentId: M:MyPlanner.src.MyTask.Update(System.String,System.String,System.String,System.DateTime)
  name.vb: Update(String, String, String, Date)
  fullName: MyPlanner.src.MyTask.Update(string, string, string, System.DateTime)
  fullName.vb: MyPlanner.src.MyTask.Update(String, String, String, Date)
  nameWithType: MyTask.Update(string, string, string, DateTime)
  nameWithType.vb: MyTask.Update(String, String, String, Date)
- uid: MyPlanner.src.MyTask.Update*
  name: Update
  href: api/MyPlanner.src.MyTask.html#MyPlanner_src_MyTask_Update_
  commentId: Overload:MyPlanner.src.MyTask.Update
  isSpec: "True"
  fullName: MyPlanner.src.MyTask.Update
  nameWithType: MyTask.Update
- uid: MyPlanner.src.MyTaskHandler
  name: MyTaskHandler
  href: api/MyPlanner.src.MyTaskHandler.html
  commentId: T:MyPlanner.src.MyTaskHandler
  fullName: MyPlanner.src.MyTaskHandler
  nameWithType: MyTaskHandler
- uid: MyPlanner.src.MyTaskHandler.#ctor
  name: MyTaskHandler()
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler__ctor
  commentId: M:MyPlanner.src.MyTaskHandler.#ctor
  name.vb: New()
  fullName: MyPlanner.src.MyTaskHandler.MyTaskHandler()
  fullName.vb: MyPlanner.src.MyTaskHandler.New()
  nameWithType: MyTaskHandler.MyTaskHandler()
  nameWithType.vb: MyTaskHandler.New()
- uid: MyPlanner.src.MyTaskHandler.#ctor*
  name: MyTaskHandler
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler__ctor_
  commentId: Overload:MyPlanner.src.MyTaskHandler.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyPlanner.src.MyTaskHandler.MyTaskHandler
  fullName.vb: MyPlanner.src.MyTaskHandler.New
  nameWithType: MyTaskHandler.MyTaskHandler
  nameWithType.vb: MyTaskHandler.New
- uid: MyPlanner.src.MyTaskHandler.CompleteTask(System.String)
  name: CompleteTask(string)
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_CompleteTask_System_String_
  commentId: M:MyPlanner.src.MyTaskHandler.CompleteTask(System.String)
  name.vb: CompleteTask(String)
  fullName: MyPlanner.src.MyTaskHandler.CompleteTask(string)
  fullName.vb: MyPlanner.src.MyTaskHandler.CompleteTask(String)
  nameWithType: MyTaskHandler.CompleteTask(string)
  nameWithType.vb: MyTaskHandler.CompleteTask(String)
- uid: MyPlanner.src.MyTaskHandler.CompleteTask*
  name: CompleteTask
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_CompleteTask_
  commentId: Overload:MyPlanner.src.MyTaskHandler.CompleteTask
  isSpec: "True"
  fullName: MyPlanner.src.MyTaskHandler.CompleteTask
  nameWithType: MyTaskHandler.CompleteTask
- uid: MyPlanner.src.MyTaskHandler.CreateTask(System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)
  name: CreateTask(int, int, string, string, string, DateTime)
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_CreateTask_System_Int32_System_Int32_System_String_System_String_System_String_System_DateTime_
  commentId: M:MyPlanner.src.MyTaskHandler.CreateTask(System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)
  name.vb: CreateTask(Integer, Integer, String, String, String, Date)
  fullName: MyPlanner.src.MyTaskHandler.CreateTask(int, int, string, string, string, System.DateTime)
  fullName.vb: MyPlanner.src.MyTaskHandler.CreateTask(Integer, Integer, String, String, String, Date)
  nameWithType: MyTaskHandler.CreateTask(int, int, string, string, string, DateTime)
  nameWithType.vb: MyTaskHandler.CreateTask(Integer, Integer, String, String, String, Date)
- uid: MyPlanner.src.MyTaskHandler.CreateTask(System.String,System.String,System.String,System.DateTime)
  name: CreateTask(string, string, string, DateTime)
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_CreateTask_System_String_System_String_System_String_System_DateTime_
  commentId: M:MyPlanner.src.MyTaskHandler.CreateTask(System.String,System.String,System.String,System.DateTime)
  name.vb: CreateTask(String, String, String, Date)
  fullName: MyPlanner.src.MyTaskHandler.CreateTask(string, string, string, System.DateTime)
  fullName.vb: MyPlanner.src.MyTaskHandler.CreateTask(String, String, String, Date)
  nameWithType: MyTaskHandler.CreateTask(string, string, string, DateTime)
  nameWithType.vb: MyTaskHandler.CreateTask(String, String, String, Date)
- uid: MyPlanner.src.MyTaskHandler.CreateTask*
  name: CreateTask
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_CreateTask_
  commentId: Overload:MyPlanner.src.MyTaskHandler.CreateTask
  isSpec: "True"
  fullName: MyPlanner.src.MyTaskHandler.CreateTask
  nameWithType: MyTaskHandler.CreateTask
- uid: MyPlanner.src.MyTaskHandler.DeleteTask(System.String)
  name: DeleteTask(string)
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_DeleteTask_System_String_
  commentId: M:MyPlanner.src.MyTaskHandler.DeleteTask(System.String)
  name.vb: DeleteTask(String)
  fullName: MyPlanner.src.MyTaskHandler.DeleteTask(string)
  fullName.vb: MyPlanner.src.MyTaskHandler.DeleteTask(String)
  nameWithType: MyTaskHandler.DeleteTask(string)
  nameWithType.vb: MyTaskHandler.DeleteTask(String)
- uid: MyPlanner.src.MyTaskHandler.DeleteTask*
  name: DeleteTask
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_DeleteTask_
  commentId: Overload:MyPlanner.src.MyTaskHandler.DeleteTask
  isSpec: "True"
  fullName: MyPlanner.src.MyTaskHandler.DeleteTask
  nameWithType: MyTaskHandler.DeleteTask
- uid: MyPlanner.src.MyTaskHandler.GetDescription(System.String)
  name: GetDescription(string)
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_GetDescription_System_String_
  commentId: M:MyPlanner.src.MyTaskHandler.GetDescription(System.String)
  name.vb: GetDescription(String)
  fullName: MyPlanner.src.MyTaskHandler.GetDescription(string)
  fullName.vb: MyPlanner.src.MyTaskHandler.GetDescription(String)
  nameWithType: MyTaskHandler.GetDescription(string)
  nameWithType.vb: MyTaskHandler.GetDescription(String)
- uid: MyPlanner.src.MyTaskHandler.GetDescription*
  name: GetDescription
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_GetDescription_
  commentId: Overload:MyPlanner.src.MyTaskHandler.GetDescription
  isSpec: "True"
  fullName: MyPlanner.src.MyTaskHandler.GetDescription
  nameWithType: MyTaskHandler.GetDescription
- uid: MyPlanner.src.MyTaskHandler.GetNoOfTasks
  name: GetNoOfTasks()
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_GetNoOfTasks
  commentId: M:MyPlanner.src.MyTaskHandler.GetNoOfTasks
  fullName: MyPlanner.src.MyTaskHandler.GetNoOfTasks()
  nameWithType: MyTaskHandler.GetNoOfTasks()
- uid: MyPlanner.src.MyTaskHandler.GetNoOfTasks*
  name: GetNoOfTasks
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_GetNoOfTasks_
  commentId: Overload:MyPlanner.src.MyTaskHandler.GetNoOfTasks
  isSpec: "True"
  fullName: MyPlanner.src.MyTaskHandler.GetNoOfTasks
  nameWithType: MyTaskHandler.GetNoOfTasks
- uid: MyPlanner.src.MyTaskHandler.GetOneTasksInfo(System.String)
  name: GetOneTasksInfo(string)
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_GetOneTasksInfo_System_String_
  commentId: M:MyPlanner.src.MyTaskHandler.GetOneTasksInfo(System.String)
  name.vb: GetOneTasksInfo(String)
  fullName: MyPlanner.src.MyTaskHandler.GetOneTasksInfo(string)
  fullName.vb: MyPlanner.src.MyTaskHandler.GetOneTasksInfo(String)
  nameWithType: MyTaskHandler.GetOneTasksInfo(string)
  nameWithType.vb: MyTaskHandler.GetOneTasksInfo(String)
- uid: MyPlanner.src.MyTaskHandler.GetOneTasksInfo*
  name: GetOneTasksInfo
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_GetOneTasksInfo_
  commentId: Overload:MyPlanner.src.MyTaskHandler.GetOneTasksInfo
  isSpec: "True"
  fullName: MyPlanner.src.MyTaskHandler.GetOneTasksInfo
  nameWithType: MyTaskHandler.GetOneTasksInfo
- uid: MyPlanner.src.MyTaskHandler.GetTasks
  name: GetTasks()
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_GetTasks
  commentId: M:MyPlanner.src.MyTaskHandler.GetTasks
  fullName: MyPlanner.src.MyTaskHandler.GetTasks()
  nameWithType: MyTaskHandler.GetTasks()
- uid: MyPlanner.src.MyTaskHandler.GetTasks*
  name: GetTasks
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_GetTasks_
  commentId: Overload:MyPlanner.src.MyTaskHandler.GetTasks
  isSpec: "True"
  fullName: MyPlanner.src.MyTaskHandler.GetTasks
  nameWithType: MyTaskHandler.GetTasks
- uid: MyPlanner.src.MyTaskHandler.UpdateTask(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime,System.Boolean)
  name: UpdateTask(int, int, int, string, string, string, DateTime, bool)
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_UpdateTask_System_Int32_System_Int32_System_Int32_System_String_System_String_System_String_System_DateTime_System_Boolean_
  commentId: M:MyPlanner.src.MyTaskHandler.UpdateTask(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime,System.Boolean)
  name.vb: UpdateTask(Integer, Integer, Integer, String, String, String, Date, Boolean)
  fullName: MyPlanner.src.MyTaskHandler.UpdateTask(int, int, int, string, string, string, System.DateTime, bool)
  fullName.vb: MyPlanner.src.MyTaskHandler.UpdateTask(Integer, Integer, Integer, String, String, String, Date, Boolean)
  nameWithType: MyTaskHandler.UpdateTask(int, int, int, string, string, string, DateTime, bool)
  nameWithType.vb: MyTaskHandler.UpdateTask(Integer, Integer, Integer, String, String, String, Date, Boolean)
- uid: MyPlanner.src.MyTaskHandler.UpdateTask(System.String,System.String,System.String,System.DateTime,System.Boolean)
  name: UpdateTask(string, string, string, DateTime, bool)
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_UpdateTask_System_String_System_String_System_String_System_DateTime_System_Boolean_
  commentId: M:MyPlanner.src.MyTaskHandler.UpdateTask(System.String,System.String,System.String,System.DateTime,System.Boolean)
  name.vb: UpdateTask(String, String, String, Date, Boolean)
  fullName: MyPlanner.src.MyTaskHandler.UpdateTask(string, string, string, System.DateTime, bool)
  fullName.vb: MyPlanner.src.MyTaskHandler.UpdateTask(String, String, String, Date, Boolean)
  nameWithType: MyTaskHandler.UpdateTask(string, string, string, DateTime, bool)
  nameWithType.vb: MyTaskHandler.UpdateTask(String, String, String, Date, Boolean)
- uid: MyPlanner.src.MyTaskHandler.UpdateTask*
  name: UpdateTask
  href: api/MyPlanner.src.MyTaskHandler.html#MyPlanner_src_MyTaskHandler_UpdateTask_
  commentId: Overload:MyPlanner.src.MyTaskHandler.UpdateTask
  isSpec: "True"
  fullName: MyPlanner.src.MyTaskHandler.UpdateTask
  nameWithType: MyTaskHandler.UpdateTask
- uid: MyPlanner.src.Planner
  name: Planner
  href: api/MyPlanner.src.Planner.html
  commentId: T:MyPlanner.src.Planner
  fullName: MyPlanner.src.Planner
  nameWithType: Planner
- uid: MyPlanner.src.Planner.#ctor
  name: Planner()
  href: api/MyPlanner.src.Planner.html#MyPlanner_src_Planner__ctor
  commentId: M:MyPlanner.src.Planner.#ctor
  name.vb: New()
  fullName: MyPlanner.src.Planner.Planner()
  fullName.vb: MyPlanner.src.Planner.New()
  nameWithType: Planner.Planner()
  nameWithType.vb: Planner.New()
- uid: MyPlanner.src.Planner.#ctor*
  name: Planner
  href: api/MyPlanner.src.Planner.html#MyPlanner_src_Planner__ctor_
  commentId: Overload:MyPlanner.src.Planner.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyPlanner.src.Planner.Planner
  fullName.vb: MyPlanner.src.Planner.New
  nameWithType: Planner.Planner
  nameWithType.vb: Planner.New
- uid: MyPlanner.src.Planner.GetNoOfTasks
  name: GetNoOfTasks()
  href: api/MyPlanner.src.Planner.html#MyPlanner_src_Planner_GetNoOfTasks
  commentId: M:MyPlanner.src.Planner.GetNoOfTasks
  fullName: MyPlanner.src.Planner.GetNoOfTasks()
  nameWithType: Planner.GetNoOfTasks()
- uid: MyPlanner.src.Planner.GetNoOfTasks*
  name: GetNoOfTasks
  href: api/MyPlanner.src.Planner.html#MyPlanner_src_Planner_GetNoOfTasks_
  commentId: Overload:MyPlanner.src.Planner.GetNoOfTasks
  isSpec: "True"
  fullName: MyPlanner.src.Planner.GetNoOfTasks
  nameWithType: Planner.GetNoOfTasks
- uid: MyPlanner.src.Planner.Run
  name: Run()
  href: api/MyPlanner.src.Planner.html#MyPlanner_src_Planner_Run
  commentId: M:MyPlanner.src.Planner.Run
  fullName: MyPlanner.src.Planner.Run()
  nameWithType: Planner.Run()
- uid: MyPlanner.src.Planner.Run*
  name: Run
  href: api/MyPlanner.src.Planner.html#MyPlanner_src_Planner_Run_
  commentId: Overload:MyPlanner.src.Planner.Run
  isSpec: "True"
  fullName: MyPlanner.src.Planner.Run
  nameWithType: Planner.Run
- uid: MyPlanner.src.PrivateTask
  name: PrivateTask
  href: api/MyPlanner.src.PrivateTask.html
  commentId: T:MyPlanner.src.PrivateTask
  fullName: MyPlanner.src.PrivateTask
  nameWithType: PrivateTask
- uid: MyPlanner.src.PrivateTask.#ctor(System.String,System.String,System.String,System.DateTime)
  name: PrivateTask(string, string, string, DateTime)
  href: api/MyPlanner.src.PrivateTask.html#MyPlanner_src_PrivateTask__ctor_System_String_System_String_System_String_System_DateTime_
  commentId: M:MyPlanner.src.PrivateTask.#ctor(System.String,System.String,System.String,System.DateTime)
  name.vb: New(String, String, String, Date)
  fullName: MyPlanner.src.PrivateTask.PrivateTask(string, string, string, System.DateTime)
  fullName.vb: MyPlanner.src.PrivateTask.New(String, String, String, Date)
  nameWithType: PrivateTask.PrivateTask(string, string, string, DateTime)
  nameWithType.vb: PrivateTask.New(String, String, String, Date)
- uid: MyPlanner.src.PrivateTask.#ctor*
  name: PrivateTask
  href: api/MyPlanner.src.PrivateTask.html#MyPlanner_src_PrivateTask__ctor_
  commentId: Overload:MyPlanner.src.PrivateTask.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyPlanner.src.PrivateTask.PrivateTask
  fullName.vb: MyPlanner.src.PrivateTask.New
  nameWithType: PrivateTask.PrivateTask
  nameWithType.vb: PrivateTask.New
- uid: MyPlanner.src.PrivateTask.GetDescription
  name: GetDescription()
  href: api/MyPlanner.src.PrivateTask.html#MyPlanner_src_PrivateTask_GetDescription
  commentId: M:MyPlanner.src.PrivateTask.GetDescription
  fullName: MyPlanner.src.PrivateTask.GetDescription()
  nameWithType: PrivateTask.GetDescription()
- uid: MyPlanner.src.PrivateTask.GetDescription*
  name: GetDescription
  href: api/MyPlanner.src.PrivateTask.html#MyPlanner_src_PrivateTask_GetDescription_
  commentId: Overload:MyPlanner.src.PrivateTask.GetDescription
  isSpec: "True"
  fullName: MyPlanner.src.PrivateTask.GetDescription
  nameWithType: PrivateTask.GetDescription
- uid: MyPlanner.src.PrivateTask.GetInformation
  name: GetInformation()
  href: api/MyPlanner.src.PrivateTask.html#MyPlanner_src_PrivateTask_GetInformation
  commentId: M:MyPlanner.src.PrivateTask.GetInformation
  fullName: MyPlanner.src.PrivateTask.GetInformation()
  nameWithType: PrivateTask.GetInformation()
- uid: MyPlanner.src.PrivateTask.GetInformation*
  name: GetInformation
  href: api/MyPlanner.src.PrivateTask.html#MyPlanner_src_PrivateTask_GetInformation_
  commentId: Overload:MyPlanner.src.PrivateTask.GetInformation
  isSpec: "True"
  fullName: MyPlanner.src.PrivateTask.GetInformation
  nameWithType: PrivateTask.GetInformation
- uid: MyPlanner.src.PrivateTask.GetLocation
  name: GetLocation()
  href: api/MyPlanner.src.PrivateTask.html#MyPlanner_src_PrivateTask_GetLocation
  commentId: M:MyPlanner.src.PrivateTask.GetLocation
  fullName: MyPlanner.src.PrivateTask.GetLocation()
  nameWithType: PrivateTask.GetLocation()
- uid: MyPlanner.src.PrivateTask.GetLocation*
  name: GetLocation
  href: api/MyPlanner.src.PrivateTask.html#MyPlanner_src_PrivateTask_GetLocation_
  commentId: Overload:MyPlanner.src.PrivateTask.GetLocation
  isSpec: "True"
  fullName: MyPlanner.src.PrivateTask.GetLocation
  nameWithType: PrivateTask.GetLocation
- uid: MyPlanner.src.PrivateTask.SetLocation(System.String)
  name: SetLocation(string)
  href: api/MyPlanner.src.PrivateTask.html#MyPlanner_src_PrivateTask_SetLocation_System_String_
  commentId: M:MyPlanner.src.PrivateTask.SetLocation(System.String)
  name.vb: SetLocation(String)
  fullName: MyPlanner.src.PrivateTask.SetLocation(string)
  fullName.vb: MyPlanner.src.PrivateTask.SetLocation(String)
  nameWithType: PrivateTask.SetLocation(string)
  nameWithType.vb: PrivateTask.SetLocation(String)
- uid: MyPlanner.src.PrivateTask.SetLocation*
  name: SetLocation
  href: api/MyPlanner.src.PrivateTask.html#MyPlanner_src_PrivateTask_SetLocation_
  commentId: Overload:MyPlanner.src.PrivateTask.SetLocation
  isSpec: "True"
  fullName: MyPlanner.src.PrivateTask.SetLocation
  nameWithType: PrivateTask.SetLocation
- uid: MyPlanner.src.WorkTask
  name: WorkTask
  href: api/MyPlanner.src.WorkTask.html
  commentId: T:MyPlanner.src.WorkTask
  fullName: MyPlanner.src.WorkTask
  nameWithType: WorkTask
- uid: MyPlanner.src.WorkTask.#ctor(System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)
  name: WorkTask(int, int, string, string, string, DateTime)
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask__ctor_System_Int32_System_Int32_System_String_System_String_System_String_System_DateTime_
  commentId: M:MyPlanner.src.WorkTask.#ctor(System.Int32,System.Int32,System.String,System.String,System.String,System.DateTime)
  name.vb: New(Integer, Integer, String, String, String, Date)
  fullName: MyPlanner.src.WorkTask.WorkTask(int, int, string, string, string, System.DateTime)
  fullName.vb: MyPlanner.src.WorkTask.New(Integer, Integer, String, String, String, Date)
  nameWithType: WorkTask.WorkTask(int, int, string, string, string, DateTime)
  nameWithType.vb: WorkTask.New(Integer, Integer, String, String, String, Date)
- uid: MyPlanner.src.WorkTask.#ctor*
  name: WorkTask
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask__ctor_
  commentId: Overload:MyPlanner.src.WorkTask.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyPlanner.src.WorkTask.WorkTask
  fullName.vb: MyPlanner.src.WorkTask.New
  nameWithType: WorkTask.WorkTask
  nameWithType.vb: WorkTask.New
- uid: MyPlanner.src.WorkTask.Completed
  name: Completed()
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_Completed
  commentId: M:MyPlanner.src.WorkTask.Completed
  fullName: MyPlanner.src.WorkTask.Completed()
  nameWithType: WorkTask.Completed()
- uid: MyPlanner.src.WorkTask.Completed*
  name: Completed
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_Completed_
  commentId: Overload:MyPlanner.src.WorkTask.Completed
  isSpec: "True"
  fullName: MyPlanner.src.WorkTask.Completed
  nameWithType: WorkTask.Completed
- uid: MyPlanner.src.WorkTask.GetDescription
  name: GetDescription()
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_GetDescription
  commentId: M:MyPlanner.src.WorkTask.GetDescription
  fullName: MyPlanner.src.WorkTask.GetDescription()
  nameWithType: WorkTask.GetDescription()
- uid: MyPlanner.src.WorkTask.GetDescription*
  name: GetDescription
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_GetDescription_
  commentId: Overload:MyPlanner.src.WorkTask.GetDescription
  isSpec: "True"
  fullName: MyPlanner.src.WorkTask.GetDescription
  nameWithType: WorkTask.GetDescription
- uid: MyPlanner.src.WorkTask.GetInformation
  name: GetInformation()
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_GetInformation
  commentId: M:MyPlanner.src.WorkTask.GetInformation
  fullName: MyPlanner.src.WorkTask.GetInformation()
  nameWithType: WorkTask.GetInformation()
- uid: MyPlanner.src.WorkTask.GetInformation*
  name: GetInformation
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_GetInformation_
  commentId: Overload:MyPlanner.src.WorkTask.GetInformation
  isSpec: "True"
  fullName: MyPlanner.src.WorkTask.GetInformation
  nameWithType: WorkTask.GetInformation
- uid: MyPlanner.src.WorkTask.GetPrio
  name: GetPrio()
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_GetPrio
  commentId: M:MyPlanner.src.WorkTask.GetPrio
  fullName: MyPlanner.src.WorkTask.GetPrio()
  nameWithType: WorkTask.GetPrio()
- uid: MyPlanner.src.WorkTask.GetPrio*
  name: GetPrio
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_GetPrio_
  commentId: Overload:MyPlanner.src.WorkTask.GetPrio
  isSpec: "True"
  fullName: MyPlanner.src.WorkTask.GetPrio
  nameWithType: WorkTask.GetPrio
- uid: MyPlanner.src.WorkTask.GetProgression
  name: GetProgression()
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_GetProgression
  commentId: M:MyPlanner.src.WorkTask.GetProgression
  fullName: MyPlanner.src.WorkTask.GetProgression()
  nameWithType: WorkTask.GetProgression()
- uid: MyPlanner.src.WorkTask.GetProgression*
  name: GetProgression
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_GetProgression_
  commentId: Overload:MyPlanner.src.WorkTask.GetProgression
  isSpec: "True"
  fullName: MyPlanner.src.WorkTask.GetProgression
  nameWithType: WorkTask.GetProgression
- uid: MyPlanner.src.WorkTask.GetProjectName
  name: GetProjectName()
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_GetProjectName
  commentId: M:MyPlanner.src.WorkTask.GetProjectName
  fullName: MyPlanner.src.WorkTask.GetProjectName()
  nameWithType: WorkTask.GetProjectName()
- uid: MyPlanner.src.WorkTask.GetProjectName*
  name: GetProjectName
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_GetProjectName_
  commentId: Overload:MyPlanner.src.WorkTask.GetProjectName
  isSpec: "True"
  fullName: MyPlanner.src.WorkTask.GetProjectName
  nameWithType: WorkTask.GetProjectName
- uid: MyPlanner.src.WorkTask.SetEstimatedTime(System.Int32)
  name: SetEstimatedTime(int)
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_SetEstimatedTime_System_Int32_
  commentId: M:MyPlanner.src.WorkTask.SetEstimatedTime(System.Int32)
  name.vb: SetEstimatedTime(Integer)
  fullName: MyPlanner.src.WorkTask.SetEstimatedTime(int)
  fullName.vb: MyPlanner.src.WorkTask.SetEstimatedTime(Integer)
  nameWithType: WorkTask.SetEstimatedTime(int)
  nameWithType.vb: WorkTask.SetEstimatedTime(Integer)
- uid: MyPlanner.src.WorkTask.SetEstimatedTime*
  name: SetEstimatedTime
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_SetEstimatedTime_
  commentId: Overload:MyPlanner.src.WorkTask.SetEstimatedTime
  isSpec: "True"
  fullName: MyPlanner.src.WorkTask.SetEstimatedTime
  nameWithType: WorkTask.SetEstimatedTime
- uid: MyPlanner.src.WorkTask.SetPrio(System.Int32)
  name: SetPrio(int)
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_SetPrio_System_Int32_
  commentId: M:MyPlanner.src.WorkTask.SetPrio(System.Int32)
  name.vb: SetPrio(Integer)
  fullName: MyPlanner.src.WorkTask.SetPrio(int)
  fullName.vb: MyPlanner.src.WorkTask.SetPrio(Integer)
  nameWithType: WorkTask.SetPrio(int)
  nameWithType.vb: WorkTask.SetPrio(Integer)
- uid: MyPlanner.src.WorkTask.SetPrio*
  name: SetPrio
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_SetPrio_
  commentId: Overload:MyPlanner.src.WorkTask.SetPrio
  isSpec: "True"
  fullName: MyPlanner.src.WorkTask.SetPrio
  nameWithType: WorkTask.SetPrio
- uid: MyPlanner.src.WorkTask.SetProjectName(System.String)
  name: SetProjectName(string)
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_SetProjectName_System_String_
  commentId: M:MyPlanner.src.WorkTask.SetProjectName(System.String)
  name.vb: SetProjectName(String)
  fullName: MyPlanner.src.WorkTask.SetProjectName(string)
  fullName.vb: MyPlanner.src.WorkTask.SetProjectName(String)
  nameWithType: WorkTask.SetProjectName(string)
  nameWithType.vb: WorkTask.SetProjectName(String)
- uid: MyPlanner.src.WorkTask.SetProjectName*
  name: SetProjectName
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_SetProjectName_
  commentId: Overload:MyPlanner.src.WorkTask.SetProjectName
  isSpec: "True"
  fullName: MyPlanner.src.WorkTask.SetProjectName
  nameWithType: WorkTask.SetProjectName
- uid: MyPlanner.src.WorkTask.SetTimeWorked(System.Int32)
  name: SetTimeWorked(int)
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_SetTimeWorked_System_Int32_
  commentId: M:MyPlanner.src.WorkTask.SetTimeWorked(System.Int32)
  name.vb: SetTimeWorked(Integer)
  fullName: MyPlanner.src.WorkTask.SetTimeWorked(int)
  fullName.vb: MyPlanner.src.WorkTask.SetTimeWorked(Integer)
  nameWithType: WorkTask.SetTimeWorked(int)
  nameWithType.vb: WorkTask.SetTimeWorked(Integer)
- uid: MyPlanner.src.WorkTask.SetTimeWorked*
  name: SetTimeWorked
  href: api/MyPlanner.src.WorkTask.html#MyPlanner_src_WorkTask_SetTimeWorked_
  commentId: Overload:MyPlanner.src.WorkTask.SetTimeWorked
  isSpec: "True"
  fullName: MyPlanner.src.WorkTask.SetTimeWorked
  nameWithType: WorkTask.SetTimeWorked
- uid: MyPlannerTests
  name: MyPlannerTests
  href: api/MyPlannerTests.html
  commentId: N:MyPlannerTests
  fullName: MyPlannerTests
  nameWithType: MyPlannerTests
- uid: MyPlannerTests.PlannerTest
  name: PlannerTest
  href: api/MyPlannerTests.PlannerTest.html
  commentId: T:MyPlannerTests.PlannerTest
  fullName: MyPlannerTests.PlannerTest
  nameWithType: PlannerTest
- uid: MyPlannerTests.PlannerTest.Setup
  name: Setup()
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_Setup
  commentId: M:MyPlannerTests.PlannerTest.Setup
  fullName: MyPlannerTests.PlannerTest.Setup()
  nameWithType: PlannerTest.Setup()
- uid: MyPlannerTests.PlannerTest.Setup*
  name: Setup
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_Setup_
  commentId: Overload:MyPlannerTests.PlannerTest.Setup
  isSpec: "True"
  fullName: MyPlannerTests.PlannerTest.Setup
  nameWithType: PlannerTest.Setup
- uid: MyPlannerTests.PlannerTest.TearDown
  name: TearDown()
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_TearDown
  commentId: M:MyPlannerTests.PlannerTest.TearDown
  fullName: MyPlannerTests.PlannerTest.TearDown()
  nameWithType: PlannerTest.TearDown()
- uid: MyPlannerTests.PlannerTest.TearDown*
  name: TearDown
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_TearDown_
  commentId: Overload:MyPlannerTests.PlannerTest.TearDown
  isSpec: "True"
  fullName: MyPlannerTests.PlannerTest.TearDown
  nameWithType: PlannerTest.TearDown
- uid: MyPlannerTests.PlannerTest.TestCreatePlanner
  name: TestCreatePlanner()
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_TestCreatePlanner
  commentId: M:MyPlannerTests.PlannerTest.TestCreatePlanner
  fullName: MyPlannerTests.PlannerTest.TestCreatePlanner()
  nameWithType: PlannerTest.TestCreatePlanner()
- uid: MyPlannerTests.PlannerTest.TestCreatePlanner*
  name: TestCreatePlanner
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_TestCreatePlanner_
  commentId: Overload:MyPlannerTests.PlannerTest.TestCreatePlanner
  isSpec: "True"
  fullName: MyPlannerTests.PlannerTest.TestCreatePlanner
  nameWithType: PlannerTest.TestCreatePlanner
- uid: MyPlannerTests.PlannerTest.TestInvalidMenuOption
  name: TestInvalidMenuOption()
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_TestInvalidMenuOption
  commentId: M:MyPlannerTests.PlannerTest.TestInvalidMenuOption
  fullName: MyPlannerTests.PlannerTest.TestInvalidMenuOption()
  nameWithType: PlannerTest.TestInvalidMenuOption()
- uid: MyPlannerTests.PlannerTest.TestInvalidMenuOption*
  name: TestInvalidMenuOption
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_TestInvalidMenuOption_
  commentId: Overload:MyPlannerTests.PlannerTest.TestInvalidMenuOption
  isSpec: "True"
  fullName: MyPlannerTests.PlannerTest.TestInvalidMenuOption
  nameWithType: PlannerTest.TestInvalidMenuOption
- uid: MyPlannerTests.PlannerTest.TestMenuEnd
  name: TestMenuEnd()
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_TestMenuEnd
  commentId: M:MyPlannerTests.PlannerTest.TestMenuEnd
  fullName: MyPlannerTests.PlannerTest.TestMenuEnd()
  nameWithType: PlannerTest.TestMenuEnd()
- uid: MyPlannerTests.PlannerTest.TestMenuEnd*
  name: TestMenuEnd
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_TestMenuEnd_
  commentId: Overload:MyPlannerTests.PlannerTest.TestMenuEnd
  isSpec: "True"
  fullName: MyPlannerTests.PlannerTest.TestMenuEnd
  nameWithType: PlannerTest.TestMenuEnd
- uid: MyPlannerTests.PlannerTest.TestShowMenu
  name: TestShowMenu()
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_TestShowMenu
  commentId: M:MyPlannerTests.PlannerTest.TestShowMenu
  fullName: MyPlannerTests.PlannerTest.TestShowMenu()
  nameWithType: PlannerTest.TestShowMenu()
- uid: MyPlannerTests.PlannerTest.TestShowMenu*
  name: TestShowMenu
  href: api/MyPlannerTests.PlannerTest.html#MyPlannerTests_PlannerTest_TestShowMenu_
  commentId: Overload:MyPlannerTests.PlannerTest.TestShowMenu
  isSpec: "True"
  fullName: MyPlannerTests.PlannerTest.TestShowMenu
  nameWithType: PlannerTest.TestShowMenu
